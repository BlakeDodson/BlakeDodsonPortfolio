/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/Models/Skills.gltf 
*/
import React, { useState, useEffect} from 'react'
import { Float, Text, useGLTF, useTexture } from '@react-three/drei'
import * as THREE from "three"

export function SkillsReef(props) {
  const { nodes, materials } = useGLTF('/Models/Skills.gltf')
  const texture = useTexture('/Textures/Baked.002.jpg')
  const [hovered, setHovered] = useState(false)
  const [selectedItem, setSelectedItem] = useState(null) 



  useEffect(() => {
    if (hovered) {
      document.body.style.cursor = 'pointer';
    } else {
      document.body.style.cursor = 'default';
    }
  }, [hovered]);


  
  const toggleSelectedItem = (itemName) => {
    setSelectedItem((current) => current === itemName ? null : itemName);
  };

  texture.flipY = false;
  texture.Encoding = THREE.sRGBEncoding;
const TextureMaterial = new THREE.MeshStandardMaterial({
  map: texture,
}
)
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Reef_Left.geometry} material={TextureMaterial} position={[6.157, 3.074, 17.443]} rotation={[-Math.PI, 0.518, -Math.PI]} />
      <mesh geometry={nodes.Reef_Right.geometry} material={TextureMaterial} position={[5.405, 3.262, -17.428]} />
      <mesh geometry={nodes.Reef_small_left.geometry} material={TextureMaterial} position={[4.899, 2.001, 6.509]} rotation={[0, 0.578, 0]} />
      <mesh geometry={nodes.Reef_small_left001.geometry} material={TextureMaterial} position={[10.306, 1.319, -1.187]} rotation={[0, 0.578, 0]} />
      <mesh geometry={nodes.Reef_small_left002.geometry} material={TextureMaterial} position={[11.443, 1.319, -2.188]} rotation={[-Math.PI, 0.874, -Math.PI]} />
      <mesh geometry={nodes.Reef_small_left003.geometry} material={TextureMaterial} position={[12.401, 1.396, 5.715]} rotation={[0, 0.854, 0]} />
      <mesh geometry={nodes.Reef_small_left004.geometry} material={TextureMaterial} position={[11.479, 1.249, 11.813]} rotation={[0, 1.532, 0]} />
      <mesh geometry={nodes.Reef_small_left005.geometry} material={TextureMaterial} position={[9.948, 1.319, 11.439]} rotation={[-Math.PI, 0.196, -Math.PI]} />
      <mesh geometry={nodes.Reef_small_left006.geometry} material={TextureMaterial} position={[9.69, 1.319, 12.933]} rotation={[0, 1.256, 0]} />
      <mesh geometry={nodes.Reef_small_left007.geometry} material={TextureMaterial} position={[9.281, 1.33, -10.397]} rotation={[0, -0.476, 0]} />
      <mesh geometry={nodes.Reef_small_left008.geometry} material={TextureMaterial} position={[11.365, 1.33, -9.678]} rotation={[0, 1.214, 0]} />
      <mesh geometry={nodes.Reef_small_left009.geometry} material={TextureMaterial} position={[10.471, 1.227, -7.568]} rotation={[0, -0.2, 0]} />
      <mesh geometry={nodes.Reef_small_left010.geometry} material={TextureMaterial} position={[5.884, 1.319, 3.109]} rotation={[-Math.PI, 0.737, -Math.PI]} />
      <mesh geometry={nodes.Reef_small_left011.geometry} material={TextureMaterial} position={[7.823, 1.319, 4.695]} rotation={[-Math.PI, 0.83, -Math.PI]} />
      <mesh geometry={nodes.Reef_small_left012.geometry} material={TextureMaterial} position={[10.832, 1.319, -16.803]} rotation={[-Math.PI, 1.442, -Math.PI]} />
      <mesh geometry={nodes.Reef_small_right.geometry} material={TextureMaterial} position={[5.489, 2.006, -7.311]} rotation={[0, 1.192, 0]} />
      <mesh geometry={nodes.Seaweed_1001.geometry} material={TextureMaterial} position={[0.433, 0.765, 2.331]} rotation={[-1.628, -0.116, -1.694]} />
      <mesh geometry={nodes.Seaweed_1002.geometry} material={TextureMaterial} position={[-0.217, 1.045, -5.819]} rotation={[-1.66, -0.093, -1.999]} />
      <mesh geometry={nodes.Seaweed_1003.geometry} material={TextureMaterial} position={[0.293, 0.234, 11.165]} rotation={[-1.546, 0.127, 1.712]} />
      <mesh geometry={nodes.Seaweed_1004.geometry} material={TextureMaterial} position={[2.262, 0.234, -12.269]} rotation={[-1.628, -0.116, -1.694]} />
      <mesh geometry={nodes.Seaweed_1006.geometry} material={TextureMaterial} position={[0.372, 0.234, -10.004]} rotation={[-1.628, -0.116, -1.694]} />
      <mesh geometry={nodes.Seaweed_1007.geometry} material={TextureMaterial} position={[12.441, 1.292, 5.291]} rotation={[-1.628, -0.116, -1.694]} />
      <mesh geometry={nodes.Seaweed_1008.geometry} material={TextureMaterial} position={[10.101, 1.199, -7.912]} rotation={[-1.628, -0.116, -1.694]} />
      <mesh geometry={nodes.Seaweed_1010.geometry} material={TextureMaterial} position={[-0.383, 0.234, 6.858]} rotation={[-1.628, -0.116, -1.694]} />
      <mesh geometry={nodes.Seaweed_2001.geometry} material={TextureMaterial} position={[3.085, 1.011, 10.603]} rotation={[-1.535, 0.123, 1.609]} />
      <mesh geometry={nodes.Seaweed_2002.geometry} material={TextureMaterial} position={[1.926, 0.234, -2]} rotation={[-1.535, 0.123, 1.609]} />
      <mesh geometry={nodes.Seaweed_2003.geometry} material={TextureMaterial} position={[6.347, 0.869, 1.454]} rotation={[-1.455, 0.055, 0.767]} />
      <mesh geometry={nodes.Seaweed_2004.geometry} material={TextureMaterial} position={[7.519, 0.869, -4.504]} rotation={[-1.455, 0.055, 0.767]} />
      <mesh geometry={nodes.Seaweed_2005.geometry} material={TextureMaterial} position={[3.795, 0.234, -11.071]} rotation={[-1.535, 0.123, 1.609]} />
      <group position={[2.707, 0.234, 13.579]} rotation={[-Math.PI, 0.267, -Math.PI]}>
        <mesh geometry={nodes.Plane004.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Plane004_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[1.396, 0.234, 13.579]} rotation={[Math.PI, -0.868, Math.PI]}>
        <mesh geometry={nodes.Plane005.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Plane005_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[2.629, 0.234, 12.43]} rotation={[0, -1.174, 0]}>
        <mesh geometry={nodes.Plane006.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Plane006_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[-0.05, 0.234, -0.484]} rotation={[-Math.PI, 0.267, -Math.PI]}>
        <mesh geometry={nodes.Plane013.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Plane013_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[0.027, 0.234, -7.789]} rotation={[-Math.PI, 0.267, -Math.PI]}>
        <mesh geometry={nodes.Plane014.geometry} material={TextureMaterial } />
        <mesh geometry={nodes.Plane014_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[4.541, 1.132, -4.515]} rotation={[0, -1.477, 0]}>
        <mesh geometry={nodes.Cylinder003.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder003_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[7.698, 4.714, 18.988]} rotation={[0.077, 0.267, -0.285]}>
        <mesh geometry={nodes.Cylinder008.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder008_1.geometry} material={TextureMaterial} />
      </group>
      <group position={[10.544, 1.126, -15.346]} rotation={[Math.PI, -0.025, Math.PI]}>
        <mesh geometry={nodes.Cylinder011.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder011_1.geometry} material={TextureMaterial} />
      </group>
      <mesh geometry={nodes.Coral_4001.geometry} material={TextureMaterial} position={[9.248, 4.111, 18.621]} rotation={[-0.003, -0.006, -0.434]} />
      <mesh geometry={nodes.Coral_4002.geometry} material={TextureMaterial} position={[6.939, 1.889, 5.12]} rotation={[-0.003, -0.005, -0.484]} />
      <mesh geometry={nodes.Coral_4003.geometry} material={TextureMaterial} position={[4.368, 3.602, 7.809]} rotation={[0.002, -0.006, 0.253]} />
      <mesh geometry={nodes.Coral_4004.geometry} material={TextureMaterial} position={[10.684, 1.268, -18.709]} rotation={[0, -0.006, 0]} />
      <mesh geometry={nodes.Coral_3001.geometry} material={TextureMaterial} position={[4.252, 1.024, 3.973]} rotation={[-Math.PI, 1.109, -Math.PI]} />
      <mesh geometry={nodes.Coral_3002.geometry} material={TextureMaterial} position={[9.211, 4.732, 16.898]} rotation={[2.682, -0.321, Math.PI]} />
      <mesh geometry={nodes.Coral_3003.geometry} material={TextureMaterial} position={[7.593, 3.038, -14.745]} rotation={[-0.774, -1.062, -0.827]} />
      <mesh geometry={nodes.Coral_2001.geometry} material={TextureMaterial} position={[5.486, 1.925, 12.751]} rotation={[Math.PI, 0.296, -2.673]} />
      <mesh geometry={nodes.Coral_2002.geometry} material={TextureMaterial} position={[5.749, 1.286, 10.046]} rotation={[0.438, -0.802, 1.046]} />
      <mesh geometry={nodes.Coral_2003.geometry} material={TextureMaterial} position={[10.855, 1.022, 18.638]} rotation={[0, 1.116, 0.469]} />
      <mesh geometry={nodes.Coral_2004.geometry} material={TextureMaterial} position={[7.327, 1.093, -9.989]} rotation={[-Math.PI, 0.717, -2.673]} />
      <mesh geometry={nodes.Coral_2005.geometry} material={TextureMaterial} position={[5.509, 4.64, -14.025]} rotation={[0, -0.005, 0.469]} />
      <mesh geometry={nodes.Coral_1001.geometry} material={TextureMaterial} position={[7.227, 3.852, 14.761]} rotation={[1.811, 0.455, -2.506]} />
      <mesh geometry={nodes.Coral_1002.geometry} material={TextureMaterial} position={[5.883, 3.067, -13.354]} rotation={[1.329, -0.899, 0.63]} />

      {/* Chest All */}
<Float 
speed={2} 
rotationIntensity={.3} 
floatIntensity={.3}
floatingRange={[1.6, 1.5]} 
>
  {/* Object-Chest */}
      <group 
      name='chest'
      position={[10.223, 3.026, -12.43]} 
      rotation={[0, -0.388, -2.704]} 
      scale={[1.115, 0.277, 1.669]}
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("chest")}
      >
        <mesh geometry={nodes.Cube010.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cube010_1.geometry} material={TextureMaterial} />
      </group>
</Float>

{/* text for chest */}
      {selectedItem === "chest" && (
        <>
          <Text 
          fontSize={.75}
            maxWidth={35}
            position={[4,12,0]}
            scale={1} 
            rotation-y={1.6} 
            textAlign='center'>
                  In the world of front-end web development with React, 
                  the treasure chest brims with invaluable tools, not of gold, but of innovation. 
                  It's filled with cutting-edge AI helpers like ChatGPT,
                  alongside development enhancers such as Drei, 
                  which streamline the creation process. 
                  This chest isn't just a collection; 
                  it's the essence of creativity and efficiency, 
                  transforming ideas into reality. 
                  Each tool within it is a key to unlocking new possibilities,
                  making the developer's craft not just easier,
                  but boundlessly imaginative.
                <meshStandardMaterial color={"white"}/>
              </Text>  
                  <Text 
                  fontSize={0.75}
                  maxWidth={35} 
                  position={[4, 16, 0]} 
                  scale={1.5} 
                  rotation-y={1.6}
                >
                  The Richmans Chest 'Various Tools/AI'
                  <meshStandardMaterial color={"white"}/>
                </Text>
              </>
      )
      }


 {/* Wheel All */}
<Float
speed={1}
rotationIntensity={.3} 
floatIntensity={.2}
floatingRange={[1.6, 1.5]} 
>
    {/* Object-Wheel */}
      <group 
      name='wheel'
      position={[8.649, 1.41, -5.757]} 
      rotation={[2.804, 0.391, 2.737]} 
      scale={0.138}
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("wheel")}
      >
        <mesh geometry={nodes.Cylinder013.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder013_1.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder013_2.geometry} material={TextureMaterial} />
      </group>
</Float>
{/* text for Wheel */}
{selectedItem === "wheel" && (
  <>
    <Text 
      fontSize={0.75}
      maxWidth={35} 
      position={[4, 12, 0]} 
      scale={1} 
      rotation-y={1.6} 
      textAlign='center'
    >
      In the Sea of web development, proficiency in React is akin to mastering the art of navigation with a ship's wheel. 
      Both require a deep understanding of the mechanisms at play and the ability to adjust to changing conditions with precision and grace. 
      React, with its robust library and flexible architecture, serves as the wheel by which I steer the development of dynamic and responsive user interfaces
      through the unpredictable waters of technological advancements and user expectations.
      React has allowed me to maintain control and direction, even when faced with the challenges of complex application 
      requirements or the need to pivot swiftly in response to feedback.
      <meshStandardMaterial color={"white"}/>
    </Text>
    <Text 
      fontSize={0.75}
      maxWidth={35} 
      position={[4, 16.5, 0]} 
      scale={1.5} 
      rotation-y={1.6}
    >
      The Captains Wheel 'REACT'
      <meshStandardMaterial color={"white"}/>
    </Text>
  </>
)}

 {/* Frame All */}
<Float
speed={1}
rotationIntensity={.3} 
floatIntensity={.2} 
floatingRange={[2, 4]} 
>
    {/* Object-Frame */}
      <group 
      name='frame'
      position={[7.643, 2.287, 8.267]} 
      rotation={[-3.116, 0.043, -2.359]} 
      scale={[-1.721, -0.029, -2.109]}      
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("frame")}
      >
        <mesh geometry={nodes.Cube012.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cube012_1.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cube012_2.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cube012_3.geometry} material={TextureMaterial} />
      </group>
</Float>
{/* text for Frame */}
      {selectedItem === "frame" && (
        <>
               <Text 
               fontSize={.75}
               maxWidth={35} 
               position={[4,12,0]} 
               scale={1} 
               rotation-y={1.6} 
               textAlign='center'
               >
                 Imagine a beautifully crafted picture frame, designed to enhance and complement the artwork.
                 Much like my skills in UI/UX design act as the frame for constructing a website, 
                 Just as a frame is chosen to suit the style and essence of a painting,
                 I apply my design expertise to create interfaces that look aesthetically pleasing. 
                 The choice of colors, the layout of elements, and the interactivity of the website 
                 are all considered with an artist's attention to detail, 
                 ensuring that each aspect contributes to a harmonious and engaging user journey. 
          <meshStandardMaterial color={"white"}/>
        </Text>
            <Text 
            fontSize={0.75}
            maxWidth={35} 
            position={[4, 16, 0]} 
            scale={1.5} 
            rotation-y={1.6}
          >
            The Painters Frame 'UI/UX Design'
            <meshStandardMaterial color={"white"}/>
          </Text>
        </>
      )}

 {/* Anchor All */}
<Float
speed={1.5} 
rotationIntensity={.1} 
floatIntensity={.4} 
>
    {/* Object-Anchor*/}
      <mesh 
      name='anchor'
      geometry={nodes.Cube.geometry} 
      material={TextureMaterial} 
      position={[10.146, 2.818, 15.546]} 
      rotation={[0, 0.132, -1.123]} 
      scale={[0.279, 0.279, 0.341]} 
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("anchor")}
      />
</Float>
{/* text for Anchor */}
        {selectedItem === "anchor" && (
          <>
                 <Text 
                 fontSize={.75}
                 maxWidth={35} 
                 position={[4,11.5,0]} 
                 scale={1} 
                 rotation-y={1.6} 
                 textAlign='center'
                 >
                 Like a sturdy anchor on a ship, Html, CSS, and Javascript grounds me in the basics of web development. 
                 HTML lays down the structure of my knowledge, building a strong framework upon which I can layer more complex concepts.
                 JavaScript breathes life into this structure, It enables me to add dynamic content that responds and adapts,
                 making the experience more engaging and interactive.
                 Then there's CSS, which paints my educational journey with colors, shapes, and layouts, transforming the bare-bones structure into something visually appealing and easy to navigate.
                 Together, these three pillars of web development not only anchor my education in the digital realm but also ensures I will be able to build and innovate with confidence.
                  <meshStandardMaterial color={"white"}/>
                </Text>
                            <Text 
                            fontSize={0.75}
                            maxWidth={35} 
                            position={[4, 16.5, 0]} 
                            scale={1.5} 
                            rotation-y={1.6}
                          >
                            The Sailors Anchor 'Html, Javascript, CSS'
                            <meshStandardMaterial color={"white"}/>
                          </Text>
                        </>
              )}

 {/* Compass All */}
<Float
speed={6} 
rotationIntensity={.1} 
floatIntensity={.3} 
floatingRange={[1.6, 1.5]} 
>
    {/* Object-Compass */}
      <group 
      name='compass'
      position={[4.874, 3.608, 6.271]} 
      scale={0.664}
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("compass")}
      >
        <mesh geometry={nodes.Cylinder019.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder019_1.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder019_2.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cylinder019_3.geometry} material={TextureMaterial} />
      </group>
</Float>
{/* text for Compass */}
      {selectedItem === "compass" && (
        <>
      <Text 
      fontSize={.75}
      maxWidth={35} 
      position={[4,12,0]} 
      scale={1} 
      rotation-y={1.6} 
      textAlign='center'
      >
       To refine my career path and fuel my passion for technology, 
       I sought direction from the Bethel School of Technology program, 
       where I was in a 12 month intensive bootcamp focused on UI/UX design.
       This pivotal experience not only equipped me with design principles and user experience strategies 
       it also pointed me towards success. Through comprehensive training and hands-on projects, 
       I gained a deep understanding of how to create intuitive and 
       visually appealing interfaces, preparing me to move into frontend developement.
       This educational endeavor was a cornerstone in my development,
       setting the foundation for my continued growth and achievement in the field.
        <meshStandardMaterial color={"white"}/>
        </Text>
                    <Text 
                    fontSize={0.75}
                    maxWidth={35} 
                    position={[4, 16.5, 0]} 
                    scale={1.5} 
                    rotation-y={1.6}
                  >
                    The Adventures Compass 'Tech Education'
                    <meshStandardMaterial color={"white"}/>
                  </Text>
                </>
      )}

 {/* Sword All */}
<Float
speed={7}
rotationIntensity={.1}
floatIntensity={1} 
floatingRange={[.05, .8]} 
>
    {/* Object-Sword */}
      <group 
      name='sword'
      position={[5.737, 4.5, -7.487]} 
      rotation={[0, -0.598, -1.229]} 
      scale={0.113}
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("sword")}
      >
        <mesh geometry={nodes.Cube014.geometry} material={TextureMaterial} />
        <mesh geometry={nodes.Cube014_1.geometry} material={TextureMaterial} />
      </group>
</Float>
{/* text for Sword */}
            {selectedItem === "sword" && (
            <>
              <Text 
              fontSize={.75}
              maxWidth={35} 
              position={[4,12,0]} 
              scale={1} 
              rotation-y={1.6} 
              textAlign='center'
              >
              During my education at The American Academy of Dramatic Arts, 
              I embarked on a thrilling journey,
              blending rigorous training in acting and screenwriting with a zest for storytelling.
              This was an exhilarating adventure that sharpened my creative instincts and unleashed my potential as a storyteller. 
              Armed with a diverse toolkit—capable of bringing complex characters to life on stage and screen—
              I now weave narratives that captivate, entertain, and resonate. My education has transformed me 
              into a versatile Developer eager to build experience's in my work.
          <meshStandardMaterial color={"white"}/>
        </Text>
                    <Text 
                    fontSize={0.75}
                    maxWidth={35} 
                    position={[4, 16, 0]} 
                    scale={1.5} 
                    rotation-y={1.6}
                  >
                    The Actors Sword 'Storytelling'
                    <meshStandardMaterial color={"white"}/>
                  </Text>
                </>
      )}

{/* pillars */}
      <mesh geometry={nodes.TallPilar.geometry} material={TextureMaterial} position={[5.063, 3.76, -2.125]} scale={[0.601, 2.357, 0.601]} />
      <mesh geometry={nodes.BrokenPillar.geometry} material={TextureMaterial} position={[5.063, 1.393, 0.979]} scale={[0.897, 0.2, 0.918]} />
     
      {/* Statue All */}
<Float
speed={5} 
rotationIntensity={.1} 
floatIntensity={1} 
floatingRange={[.05, .8]} 
>
    {/* Object-statue */}
      <mesh 
      name='statue'
      geometry={nodes.Statue.geometry} 
      material={TextureMaterial} 
      position={[7.159, 1.064, -0.903]} 
      rotation={[0, 0, -0.017]} 
      scale={[0.897, 0.2, 0.918]} 
      onPointerEnter={() => setHovered(true)}
      onPointerLeave={() => setHovered(false)}
      onClick={() => toggleSelectedItem("statue")}
      />
</Float>
{/* text for Statue */}
      {selectedItem === "statue" && (
        <>
       <Text 
       fontSize={.75}
       maxWidth={35} 
       position={[4,12,0]} 
       scale={1} 
       rotation-y={1.6} 
       textAlign='center'
       >
        In my adventure through the digital ocean,
         I've discovered the incredible power of Blender, 
         it has morphed into one of my favorite skills. 
         This journey has not only been about mastering the art of 3D modeling,
          its been a thrilling quest to bring imagination to life. 
          With Blender in my toolkit, I've modeled, Products, Ships, and cities,
          showcasing my ability to blend creativity with technical prowess.
          Let's embark on this journey together, where every click uncovers a new horizon of creativity.
          <meshStandardMaterial color={"white"}/>
        </Text>
                    <Text 
                    fontSize={0.75}
                    maxWidth={35} 
                    position={[4, 16, 0]} 
                    scale={1.5} 
                    rotation-y={1.6}
                  >
                    The Artist Statue 'Blender'
                    <meshStandardMaterial color={"white"}/>
                  </Text>
                </>
      )}

      <mesh 
      geometry={nodes.Floor.geometry} 
      material={TextureMaterial} 
      position={[6.956, 0.284, 0.903]} 
      scale={2.603} />
    </group>
  )
}

useGLTF.preload('/Models/Skills.gltf')



